version: "3.9"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5
    networks:
      - local

  airflow-init:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__WEBSERVER__SECRET_KEY: "myfixedsecret123"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow/dags
    volumes:
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/requirements.txt
    entrypoint: >
      bash -c "
      airflow db upgrade &&
      airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
      "
    networks:
      - local

  airflow-webserver:
    build: .
    depends_on:
      - postgres
      - airflow-init
    environment:
      AIRFLOW__WEBSERVER__SECRET_KEY: "myfixedsecret123"
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__BASE_LOG_FOLDER: /opt/airflow/logs
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow/dags

    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    entrypoint: >
      bash -c "airflow webserver"
    networks:
      - local

  airflow-scheduler:
    build: .
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__WEBSERVER__SECRET_KEY: "myfixedsecret123"
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      PYTHONPATH: /opt/airflow/dags
    volumes:
      - ./dags:/opt/airflow/dags
    entrypoint: >
      bash -c "airflow scheduler"
    networks:
      - local


  mongo:
    image: mongo:latest
    container_name: "tdpoc_mongo"
    logging:
      options:
        max-size: 1g
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "admin"
      MONGO_INITDB_DATABASE: "risk_model_db"
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - local
    restart: always

volumes:
  mongo_data:

networks:
  local:
    driver: bridge